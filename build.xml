<!--
<project name="cashmere" default="build-external-ipl" basedir=".">
-->
<project name="cashmere" default="build" basedir=".">
    <description>
        Build file for Cashmere
    </description>

    <property name="version" value="-0.1" />

    <property name="dist-name" value="${ant.project.name}${version}" />

    <property name="sources-filename" value="${ant.project.name}${version}-sources" />

    <property name="external" location="external" />
    <property name="jocl" location="${external}/jocl" />
    <property name="javagat" value="${external}/javagat"/>
    <property name="ipl" value="${external}/ipl"/>

    <target name="build"
            description="Build Cashmere"
            depends="clean,copy-included-ipl,compile" />

    <target name="build-external-ipl"
	    description="Build with external IPL"
	    depends="clean,copy-external-ipl,compile" />

    <property name="src" location="src" />
    <property name="tmp" location="tmp" />
    <property name="lib" location="lib" />
    <property name="javadoc" location="javadoc" />
    <property name="sources" location="sources" />

    <!-- Copy dependancies to lib -->
    <target name="copy-included-ipl">
        <mkdir dir="${lib}" />
        <copy todir="${lib}">
            <fileset dir="${ipl}" />
        </copy>
    </target>

    <!-- copy external dependancies to lib, including IPL 
	 specified by $IPL_HOME -->
     <target name="copy-external-ipl">
	 <mkdir dir="${lib}" />
	 <!-- Import environment properties -->
	 <property environment="env" />
	 <property name="ibis" location="${env.IPL_HOME}" />
	 <copy todir="${lib}">
	     <fileset dir="${ibis}/lib" />
	 </copy>
     </target>

    <!-- Compile -->
    <target name="compile">

        <mkdir dir="${tmp}" />
        <mkdir dir="${lib}" />

        <!-- copy jars in external directory to lib -->
        <copy todir="${lib}">
            <fileset dir="${external}" includes="*.jar" />
        </copy>
        <copy todir="${lib}">
            <fileset dir="${javagat}" />
        </copy>
        <copy todir="${lib}">
            <fileset dir="${jocl}" />
        </copy>

        <!-- classpath -->
        <path id="default.classpath">
            <fileset dir="${lib}">
                <include name="*.jar" />
            </fileset>
            <pathelement path="${tmp}" />
        </path>

        <!-- Compile the java code from ${src} into ${tmp} -->
        <javac srcdir="${src}" 
               destdir="${tmp}" 
               debug="on"
               classpathref="default.classpath">
            <compilerarg value="-Xlint:unchecked" />
        </javac>

        <!-- Run Ibisc -->
        <java classname="ibis.compile.Ibisc"
              taskname="Ibisc"
              failonerror="true"
              dir="${tmp}"
              maxmemory="512m"
              fork="true">
            <arg line="." />
            <classpath refid="default.classpath" />
        </java>

        <!-- Extract ibis.io.Serializable, so that applications don't
             need ibis-io-2.2.jar to compile.
        -->
	<unjar src="${lib}/ibis-io-2.3.jar" dest="${tmp}">
            <patternset>
                <include name="**/Serializable.class"/>
            </patternset>
        </unjar>

        <!-- Create jar file -->
        <jar destfile="lib/${dist-name}.jar">
            <fileset dir="${tmp}" includes="**/*.class" />
            <fileset dir="." includes="LICENSE.txt" />
            <manifest>
                <attribute name="Ibisc-Component"
                    value="ibis.cashmere.impl.rewriter.Cashmerec,ibis.cashmere.impl.syncrewriter.SyncAdviser,ibis.cashmere.impl.syncrewriter.SyncRewriter" />
            </manifest>
        </jar>
        <delete dir="${tmp}" />
    </target>

    <!-- Generate javadoc -->
    <target name="javadoc" description="generate all javadocs" depends="build">
        <javadoc destdir="${javadoc}"
                 access="public"
                 classpathref="default.classpath"
                 packagenames="*"
                 sourcepath="${src}"
                 windowtitle="Ibis ${ant.project.name} Documentation"
                 doctitle="Ibis ${ant.project.name} Documentation"
                 bottom="The Ibis project">
		 <link href="http://download.oracle.com/javase/1.5.0/docs/api/" />
        </javadoc>
    </target>

    <!-- Clean up everything -->
    <target name="clean" description="Clean up">
        <delete dir="${tmp}" />
        <delete dir="${lib}" />
        <delete dir="${javadoc}" />
        <delete dir="${sources}" />
    </target>

    <target name="dist" depends="build">
        <delete file="${dist-name}.zip" />
        <delete dir="${sources}" />

        <mkdir dir="${sources}" />

	<zip destfile="${sources}/${sources-filename}.zip">
            <zipfileset dir="src"
                        includes="**/*.java"
                        prefix="${sources-filename}" />

            <zipfileset dir="."
                        includes="LICENSE.txt"
                        prefix="${sources-filename}" />
        </zip>

        <zip destfile="${dist-name}.zip">
            <zipfileset dir="."
                        prefix="${dist-name}"
                        includes="javadoc/**,lib/**,notices/**,sources/**,BUGS.txt,LICENSE.txt,HISTORY.txt,README.txt,INSTALL.txt,ibis.properties.example,log4j.properties,smartsockets.properties.example"/>
            <zipfileset dir="."
                        prefix="${dist-name}"
                        filemode="755"
                        includes="scripts/**" />
        </zip>

    </target>

</project>
