#!/usr/bin/env ruby


$cashmere=ENV['CASHMERE']

NODE_MAP = { 
    "k20" => ["node079", "node080", "node081", "node082", "node083",
	"node084", "node085"],
    "xeon_phi" => ["node079"],
    "gtx480" => ["node009", "node010", "node011", "node012", "node023",
	"node024", "node025", "node026", "node029", "node030", "node043",
	"node044", "node045", "node046", "node047", "node048", "node063", 
        "node064"],
    "c2050" => ["node061", "node062"],
    "gtx680" => ["node068"],
#    "hd7970" => ["node076"],
    "e5_2620" => ["node078", "node079", "node080", "node081", "node082",
	"node083", "node084", "node085"],
    "regular" => ["node001", "node002", "node003", "node004", "node005",
	"node006", "node007", "node008", "node013", "node014", "node015",
	"node016", "node017", "node018", "node019", "node020", "node021",
	"node022", "node027", "node028", "node031", "node033",
	"node034", "node035", "node036", "node037", "node038",
	"node040", "node041", "node042", "node049", "node050", "node051",
	"node052", "node053", "node054", "node055", "node056", "node059",
        "node060", "node069", "node070", "node071", "node072"] }

# hd7970 is not working...
	
QUEUE_MAP = {
    "k20" => "fat.q", 
    "xeon_phi" => "fat.q",
    "c2050" => "gpu.q",
    "gtx480" => "gpu.q",
    "gtx680" => "gpu.q",
    "titan" => "fat.q",
    "hd7970" => "fat.q",
    "e5_2620" => "fat.q",
    "regular" => "all.q" }

EXTRA_PARAM_MAP = {
    "gtx480" => "-native '-l gpu=GTX480' ",
    "gtx680" => "-native '-l gpu=GTX680' ",
    "c2050" => "-native '-l gpu=C2050' ",
    "k20" => "-native '-l fat,gpu=K20' ",
    "titan" => "-native '-l fat,gpu=GTX-Titan' ",
    "xeon_phi" => "-native '-l fat,accel=XeonPhi' ",
    "hd7970" => "-native '-l fat,gpu=HD7970' " }

NODES_NOT_AVAILABLE = `preserve -llist | tail -n +4 | awk 'BEGIN { FS="\\t"; x = ""} {if ($7 == "r") x = x $9 " "} END { print x }'`.split




    
def get_queue(node)
  QUEUE_MAP[node]
end

require("#{cashmere}/scripts/run-on-nodes.rb")

$node_specs.each do |a|
    arg_spec = a.split("=")
    if arg_spec.length == 2
	node = arg_spec[0]
	number = arg_spec[1]
	get_nodes(node, number)
    else
	puts "wrong arguments"
	exit 1
    end
end



command = "prun -np #{$nodes.length} -q #{$nodes.join(',')} " +
    "-t 30:0 " +
    "#{$extra_params.join} " + 
    "CLASSPATH=#{$classpath}:$CLASSPATH $CASHMERE/scripts/run-script -Dcashmere.closed -Xmx25G " +
    "-Dcashmere.detailedStats=true -Dibis.server.address=fs0.das4.cs.vu.nl " +
    "-Dcashmere.queueSteals=false " + "-Dcashmere.ft.naive=true " +
    "-Dibis.pool.size=#{$nodes.length} -Dibis.server.port=#{$port} " +
    "-Dibis.pool.name=das4.#{$$} #{$className} #{$rest.join(" ")}\n"

print command

exec(command)
